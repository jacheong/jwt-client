"use strict";var __decorate=this&&this.__decorate||function(t,e,r,n){var o,i=arguments.length,a=i<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,r,n);else for(var p=t.length-1;0<=p;p--)(o=t[p])&&(a=(i<3?o(a):3<i?o(e,r,a):o(e,r))||a);return 3<i&&a&&Object.defineProperty(e,r,a),a};Object.defineProperty(exports,"__esModule",{value:!0});var core_1=require("@angular/core"),environment_1=require("../../environments/environment"),http_1=require("@angular/common/http"),rxjs_1=require("rxjs"),operators_1=require("rxjs/operators"),ApiService=function(){function t(t,e){this.http=t,this.authService=e,this.headers=new http_1.HttpHeaders({"Content-Type":"application/json",Authorization:"Bearer "+this.authService.getToken()})}return t.prototype.getContacts=function(){return this.http.get(environment_1.environment.apiUrl+"/contacts",{headers:this.headers})},t.prototype.addContact=function(t){this.http.post(environment_1.environment.apiUrl+"/conntacts",t).pipe(operators_1.catchError(this.handleError("addContact",t)))},t.prototype.removeContact=function(t){this.http.delete(environment_1.environment.apiUrl+"/"+t._id).pipe(operators_1.catchError(this.handleError("removeContact",t)))},t.prototype.updateContact=function(t){this.http.put(environment_1.environment.apiUrl+"/"+t._id,t).pipe(operators_1.catchError(this.handleError("updateContact",t)))},t.prototype.login=function(t){return this.http.post(environment_1.environment.apiUrl+"/authenticate",t)},t.prototype.handleError=function(t,e){return void 0===t&&(t="operation"),function(t){return console.log(t),rxjs_1.of(e)}},t=__decorate([core_1.Injectable()],t)}();exports.ApiService=ApiService;